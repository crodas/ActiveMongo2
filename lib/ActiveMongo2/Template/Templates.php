<?php
/**
 *  This file was generated with crodas/SimpleView (https://github.com/crodas/SimpleView)
 *  Do not edit this file.
 *
 */

namespace {


    $GLOBALS['file_54a244ae094fd'] = array();
    $GLOBALS['line_54a244ae094fd'] = array();

    class base_template_df562f12800ad133cdbc6f040ca106a099504656
    {
        protected $parent;
        protected $child;
        protected $context;

        public function yield_parent($name, $args)
        {
            $method = "section_" . sha1($name);

            if (is_callable(array($this->parent, $method))) {
                $this->parent->$method(array_merge($this->context, $args));
                return true;
            }

            if ($this->parent) {
                return $this->parent->yield_parent($name, $args);
            }

            return false;
        }

        public function do_yield($name, Array $args = array())
        {
            if ($this->child) {
                // We have a children template, we are their base
                // so let's see if they have implemented by any change
                // this section
                if ($this->child->do_yield($name, $args)) {
                    // yes!
                    return true;
                }
            }

            // Do I have this section defined?
            $method = "section_" . sha1($name);
            if (is_callable(array($this, $method))) {
                // Yes!
                $this->$method(array_merge($this->context, $args));
                return true;
            }

            // No :-(
            return false;
        }

    }

    /** 
     *  Template class generated from Callback.tpl
     */
    class class_1895ec604b22a2e3f627b9d8d7ae6142d332247e extends base_template_df562f12800ad133cdbc6f040ca106a099504656
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (\Exception $e) {
                if ($return) ob_get_clean();
                throw new ActiveMongo2\Template\ExceptionWrapper($e, __FILE__);
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            global $file_54a244ae094fd, $line_54a244ae094fd;
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            $_54a244ae094fd = array_push($file_54a244ae094fd, 'Callback.tpl') - 1;
            $line_54a244ae094fd[$_54a244ae094fd] = 1;

            if (!$self->isEmbeddable()) {
                $line_54a244ae094fd[$_54a244ae094fd] = 2;
                echo "    if (empty(self::\$loaded[";
                var_export($self->getPath());
                echo "])) {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 3;
                if ($self->isClass() || $self->isMethod()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 4;
                    echo "            if (!class_exists(";
                    var_export($self->getClass());
                    echo ", false)) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 5;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 6;
                    echo "            if (!function_exists(";
                    var_export($self->getFunction());
                    echo ")) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 7;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 8;
                echo "            require __DIR__ . ";
                var_export($self->getPath());
                echo ";\n        }\n        self::\$loaded[";
                $line_54a244ae094fd[$_54a244ae094fd] = 10;
                var_export($self->getPath());
                echo "] = true;\n    }\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 12;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 13;
            echo "\n\$args = empty(\$args) ? [] : \$args;\n\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 16;
            if ($self->isEmbeddable()) {
                $line_54a244ae094fd[$_54a244ae094fd] = 17;
                echo "    " . ($self->toEmbedCode($var)) . "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 18;
            }
            else if ($self->isMethod()) {
                $line_54a244ae094fd[$_54a244ae094fd] = 19;
                if ($self->isPublic()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 20;
                    if ($self->isStatic()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 21;
                        echo "            \$return = \\" . ($self->getClass()) . "::" . ($self->getMethod()) . "(\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 22;
                    }
                    else if ($prop->getClass() == $self->getClass()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 23;
                        echo "            \$return = \$document->" . ($self->getMethod()) . "(\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 24;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 25;
                        echo "            // Improve me (should construct once and reuse it)\n            \$return = (new \\";
                        $line_54a244ae094fd[$_54a244ae094fd] = 26;
                        echo $self->getClass() . ")->" . ($self->getMethod()) . "(\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 27;
                    }

                    $line_54a244ae094fd[$_54a244ae094fd] = 28;
                    echo "            " . ($var) . ", // document variable \n            \$args,  // external arguments (defined at run time)\n            \$this->connection, // connection\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 31;
                    var_export($args);
                    echo ", // annotation arguments\n            \$this, // mapper instance\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 33;
                    var_export($prop->getClass());
                    echo "\n        );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 35;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 36;
                    echo "        \$reflection = new \\ReflectionMethod(";
                    var_export("\\". $self->getClass());
                    echo ", ";
                    var_export($self->getMethod());
                    echo ");\n        \$reflection->setAccessible(true);\n        \$return = \$reflection->invoke(\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 39;
                    echo $var . ", // document variable \n            \$args,  // external arguments (defined at run time)\n            \$this->connection, // connection\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 42;
                    var_export($args);
                    echo ", // annotation arguments\n            \$this, // mapper instance\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 44;
                    var_export($prop->getClass());
                    echo "\n        );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 46;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 47;
            }
            else {
                $line_54a244ae094fd[$_54a244ae094fd] = 48;
                echo "    \$return = \\" . ($self->getFunction()) . "(\n        ";
                $line_54a244ae094fd[$_54a244ae094fd] = 49;
                echo $var . ", // document variable \n        \$args,  // external arguments (defined at run time)\n        \$this->connection, // connection\n        ";
                $line_54a244ae094fd[$_54a244ae094fd] = 52;
                var_export($args);
                echo ", // annotation arguments\n        \$this, // mapper instance\n        ";
                $line_54a244ae094fd[$_54a244ae094fd] = 54;
                var_export($prop->getClass());
                echo "\n    );\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 56;
            }

            $line_54a244ae094fd[$_54a244ae094fd] = 57;

            array_pop($file_54a244ae094fd);

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Reference/Deferred.tpl.php
     */
    class class_7e3d172c6b9ee7fd7d68e93c41ee0d852447ceca extends base_template_df562f12800ad133cdbc6f040ca106a099504656
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (\Exception $e) {
                if ($return) ob_get_clean();
                throw new ActiveMongo2\Template\ExceptionWrapper($e, __FILE__);
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            global $file_54a244ae094fd, $line_54a244ae094fd;
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            $_54a244ae094fd = array_push($file_54a244ae094fd, 'Reference/Deferred.tpl.php') - 1;
            $line_54a244ae094fd[$_54a244ae094fd] = 1;

            foreach($collection->getBackReferences() as $ref) {

                $this->context['ref'] = $ref;
                $line_54a244ae094fd[$_54a244ae094fd] = 2;
                if ($ref['deferred']) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 3;
                    if ($ev == "postCreate") {
                        $line_54a244ae094fd[$_54a244ae094fd] = 4;
                        echo "            \$check = !empty(\$args[0][";
                        var_export($ref['property']->getName());
                        echo "]);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 5;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 6;
                        echo "            \$check = !empty(\$args[0]['\$set'][";
                        var_export($ref['property']->getName());
                        echo "]);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 7;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 8;
                    echo "        if (\$check) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 9;
                    if ($ref['multi']) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 10;
                        echo "                \$data = array();\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 11;
                        if ($ev == "postCreate") {
                            $line_54a244ae094fd[$_54a244ae094fd] = 12;
                            echo "                    \$fields = \$args[0][";
                            var_export($ref['property']->getName());
                            echo "];\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 13;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 14;
                            echo "                    \$fields = \$args[0]['\$set'][";
                            var_export($ref['property']->getName());
                            echo "];\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 15;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 16;
                        echo "                foreach (\$fields as \$id => \$row) {\n                    \$data[] = array(\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 18;
                        if ($ev == "postCreate") {
                            $line_54a244ae094fd[$_54a244ae094fd] = 19;
                            echo "                        'source_id' => ";
                            var_export($ref['target']->getName() . '::');
                            echo " . serialize(\$row['\$id']),\n                        'id'        => \$args[0]['_id'],\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 21;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 22;
                            echo "                        'source_id' => ";
                            var_export($ref['target']->getName() . '::');
                            echo " . serialize(\$row['\$id']),\n                        'id'        => \$args[2],\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 24;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 25;
                        echo "                        'property'  => ";
                        var_export($ref['property']->getName() . '.');
                        echo " . \$id,\n                    );\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 28;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 29;
                        echo "                \$data = array(array(\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 30;
                        if ($ev == "postCreate") {
                            $line_54a244ae094fd[$_54a244ae094fd] = 31;
                            echo "                    'source_id'     => ";
                            var_export($ref['target']->getName() . '::');
                            echo " . serialize(\$args[0][";
                            var_export($ref['property']->getName());
                            echo "]['\$id']),\n                    'id'            => \$args[0]['_id'],\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 33;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 34;
                            echo "                    'source_id'     => ";
                            var_export($ref['target']->getName() . '::');
                            echo " . serialize(\$args[0]['\$set'][";
                            var_export($ref['property']->getName());
                            echo "]['\$id']),\n                    'id'            => \$args[2],\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 36;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 37;
                        echo "                    'property'      => ";
                        var_export($ref['property']->getName());
                        echo ",\n                ));\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 39;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 40;
                    echo "            foreach (\$data as \$row) {\n                \$row['collection'] = \$this->ns_by_name[";
                    $line_54a244ae094fd[$_54a244ae094fd] = 41;
                    var_export($ref['property']->getParent()->getName());
                    echo "] . ";
                    var_export($ref['property']->getParent()->getName());
                    echo ";\n                \$row['_id'] = array(\n                    'source' => \$row['source_id'], \n                    'target_id' => \$row['id'], \n                    'target_col' => \$row['collection'], \n                    'target_prop' => \$row['property']\n                );\n                \$col->save(\$row, array('w' => 1));\n            }\n        }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 51;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 52;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 53;

            array_pop($file_54a244ae094fd);

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Reference/Update.tpl.php
     */
    class class_f8c39509b1fb331e8b8ef22a135640af98725ce5 extends base_template_df562f12800ad133cdbc6f040ca106a099504656
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (\Exception $e) {
                if ($return) ob_get_clean();
                throw new ActiveMongo2\Template\ExceptionWrapper($e, __FILE__);
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            global $file_54a244ae094fd, $line_54a244ae094fd;
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            $_54a244ae094fd = array_push($file_54a244ae094fd, 'Reference/Update.tpl.php') - 1;
            $line_54a244ae094fd[$_54a244ae094fd] = 1;

            $deferred_done = false;
            $this->context['deferred_done'] = $deferred_done;
            $line_54a244ae094fd[$_54a244ae094fd] = 2;
            foreach($collection->getForwardReferences() as $ref) {

                $this->context['ref'] = $ref;
                $line_54a244ae094fd[$_54a244ae094fd] = 3;
                echo "    // update " . ($collection->getName()) . " references in  " . ($ref['property']->getParent()->getName()) . " \n";
                $line_54a244ae094fd[$_54a244ae094fd] = 4;
                if ($ref['deferred']) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 5;
                    if (!empty($deferred_done)) {
                        continue;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 8;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 9;
                echo "    \n    \$replicate = array();\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 11;
                $deferred_done = true;
                $this->context['deferred_done'] = $deferred_done;
                $line_54a244ae094fd[$_54a244ae094fd] = 12;
                echo "    foreach (\$args[0] as \$operation => \$values) {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 13;
                foreach($ref['update'] as $field) {

                    $this->context['field'] = $field;
                    $line_54a244ae094fd[$_54a244ae094fd] = 14;
                    echo "            if (!empty(\$values[";
                    var_export($field);
                    echo "])) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 15;
                    if ($ref['deferred']) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 16;
                        echo "                    \$replicate[\$operation][";
                        var_export($field);
                        echo "]  = \$values[";
                        var_export($field);
                        echo "];\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 17;
                    }
                    else if ($ref['multi']) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 18;
                        echo "                    \$replicate[\$operation][";
                        var_export($ref['property']->getName().'.$.'.$field);
                        echo "] = \$values[";
                        var_export($field);
                        echo "];\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 19;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 20;
                        echo "                    \$replicate[\$operation][";
                        var_export($ref['property']->getName().'.'.$field);
                        echo "] = \$values[";
                        var_export($field);
                        echo "];\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 21;
                    }

                    $line_54a244ae094fd[$_54a244ae094fd] = 22;
                    echo "            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 23;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 24;
                echo "    }\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 26;
                if ($ref['deferred']) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 27;
                    echo "        if (!empty(\$replicate)) {\n            // queue the updates!\n            \$data = array(\n                'update'    => \$replicate,\n                'processed' => false,\n                'created'   => new \\DateTime,\n                'source_id' => ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 33;
                    var_export($collection->getName().'::');
                    echo "  . serialize(\$args[2]),\n                'type'      => array(\n                    'source'    => ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 35;
                    var_export($collection->getName());
                    echo ",\n                    'target'    => ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 36;
                    var_export($ref['property']->getParent()->getName());
                    echo ",\n                ),\n            );\n            \$args[1]\n                ->getDatabase()\n                ->deferred_queue\n                ->save(\$data, array('w' => 0));\n        }\n";
                    continue;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 46;
                echo "\n    if (!empty(\$replicate)) {\n        // do the update\n        \$args[1]->getCollection(";
                $line_54a244ae094fd[$_54a244ae094fd] = 49;
                var_export($ref['property']->getParent()->getName());
                echo ")\n            ->update([\n                '";
                $line_54a244ae094fd[$_54a244ae094fd] = 51;
                echo $ref['property']->getName() . ".\$id' => \$args[2]], \n                \$replicate, \n                ['w' => 0, 'multi' => true]\n        );\n    }\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 56;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 57;

            array_pop($file_54a244ae094fd);

            if ($return) {
                return ob_get_clean();
            }

        }
    }

    /** 
     *  Template class generated from Documents.tpl.php
     */
    class class_4c3d011cafbc519bc12f3ed430a4e169ad8b5e8b extends base_template_df562f12800ad133cdbc6f040ca106a099504656
    {

        public function hasSection($name)
        {

            return false;
        }


        public function renderSection($name, Array $args = array(), $fail_on_missing = true)
        {
            if (!$this->hasSection($name)) {
                if ($fail_on_missing) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }
                return "";
            }

        }

        public function render(Array $vars = array(), $return = false)
        {
            try {
                return $this->_render($vars, $return);
            } catch (\Exception $e) {
                if ($return) ob_get_clean();
                throw new ActiveMongo2\Template\ExceptionWrapper($e, __FILE__);
            }
        }

        public function _render(Array $vars = array(), $return = false)
        {
            global $file_54a244ae094fd, $line_54a244ae094fd;
            $this->context = $vars;

            extract($vars);
            if ($return) {
                ob_start();
            }
            $_54a244ae094fd = array_push($file_54a244ae094fd, 'Documents.tpl.php') - 1;
            $line_54a244ae094fd[$_54a244ae094fd] = 1;

            echo "<?php\n\nnamespace ";
            $line_54a244ae094fd[$_54a244ae094fd] = 3;
            echo trim($namespace, '\\') . ";\n\nuse ";
            $line_54a244ae094fd[$_54a244ae094fd] = 5;
            echo $valns . " as v;\nuse MongoClient;\nuse ActiveMongo2\\Connection;\nuse Notoj\\Annotation;\nuse Notoj;\n\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 11;
            $instance = '_' . uniqid(true);
            $this->context['instance'] = $instance;
            $line_54a244ae094fd[$_54a244ae094fd] = 12;
            echo "\nclass Mapper\n{\n    protected \$mapper = ";
            $line_54a244ae094fd[$_54a244ae094fd] = 15;
            echo crodas\FileUtil\dump_array($collections->byName(), true) . ";\n    protected \$class_mapper = ";
            $line_54a244ae094fd[$_54a244ae094fd] = 16;
            echo crodas\FileUtil\dump_array($collections->byClass(), true) . ";\n    protected static \$loaded = array();\n    protected \$connection;\n    protected \$connections;\n    protected \$class_connections = ";
            $line_54a244ae094fd[$_54a244ae094fd] = 20;
            var_export($collections->byConnection());
            echo ";\n    protected \$ns = array();\n    protected \$ns_by_name = array();\n\n    public function __construct(Connection \$conn)\n    {\n        \$this->connection = \$conn;\n        spl_autoload_register(array(\$this, '__autoloader'));\n    }\n\n    public function setDatabases(Array \$conns, Array \$ns)\n    {\n        \$this->connections = \$conns;\n\n        \$this->ns = \$ns;\n        foreach (\$this->class_connections as \$class => \$conn) {\n            \$ns =\"\";\n            if (!empty(\$this->ns[\$conn])) {\n                \$ns = \$this->ns[\$conn];\n            }\n            if (!empty(\$this->class_mapper[\$class])) {\n                \$this->ns_by_name[ \$this->class_mapper[\$class]['name'] ] = \$ns;\n            }\n        }\n\n        return \$this;\n    }\n\n    public function getRelativePath(\$object, \$dir)\n    {\n        if (\$dir[0] == '/') {\n            return \$dir;\n        }\n        \$info = \$this->mapClass(\$object);\n        return __DIR__ . \$info['dir'] . \"/\" . \$dir;\n    }\n\n    protected function array_diff(Array \$arr1, Array \$arr2)\n    {\n        \$diff = array();\n        foreach (\$arr1 as \$key => \$value) {\n            if (empty(\$arr2[\$key]) || \$arr2[\$key] !== \$arr1[\$key]) {\n                \$diff[\$key] = \$value;\n            }\n        }\n        return \$diff;\n    }\n\n    public function getCollections()\n    {\n        return array(\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 71;
            foreach($collections as $collection) {

                $this->context['collection'] = $collection;
                $line_54a244ae094fd[$_54a244ae094fd] = 72;
                if ($collection->getName()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 73;
                    echo "                ";
                    var_export($collection->getClass());
                    echo " => \$this->ns_by_name[";
                    var_export($collection->getName());
                    echo "]. ";
                    var_export($collection->getName());
                    echo ",\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 74;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 75;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 76;
            echo "        );\n    }\n\n    public function __autoloader(\$class)\n    {\n        \$class = strtolower(\$class);\n        if (!empty(\$this->class_mapper[\$class])) {\n            self::\$loaded[\$this->class_mapper[\$class]['file']] = true;\n            require __DIR__ . \$this->class_mapper[\$class]['file'];\n\n            return true;\n        }\n        return false;\n    }\n\n    public function getCollectionObject(\$col)\n    {\n        if (!is_scalar(\$col) || empty(\$this->mapper[\$col])) {\n            \$data = \$this->mapClass(\$col);     \n        } else {\n            \$data = \$this->mapper[\$col];\n        }\n\n        if (empty(self::\$loaded[\$data['file']])) {\n            if (!class_exists(\$data['class'], false)) {\n                require __DIR__ .  \$data['file'];\n            }\n            self::\$loaded[\$data['file']] = true;\n        }\n\n        \$data['name'] = \$this->ns_by_name[\$data['name']] . \$data['name'];\n\n        \$conn = \$this->class_connections[\$data['class']];\n\n        if (empty(\$this->connections[\$conn])) {\n            throw new \\RuntimeException(\"Cannot find connection \$conn\");\n        }\n\n        \$db = \$this->connections[\$conn];\n        if (!empty(\$data['is_gridfs'])) {\n            \$col = \$db->getGridFs(\$data['name']);\n        } else {\n            \$col = \$db->selectCollection(\$data['name']);\n        }\n\n        return [\$col, \$data['class']];\n    }\n\n    public function mapCollection(\$col)\n    {\n        if (empty(\$this->mapper[\$col])) {\n            throw new \\RuntimeException(\"Cannot map {\$col} collection to its class\");\n        }\n\n        \$data = \$this->mapper[\$col];\n\n        if (empty(self::\$loaded[\$data['file']])) {\n            if (!class_exists(\$data['class'], false)) {\n                require __DIR__ .  \$data['file'];\n            }\n            self::\$loaded[\$data['file']] = true;\n        }\n\n        return \$data;\n    }\n\n    public function onQuery(\$table, &\$query)\n    {\n        if (!is_array(\$query)) {\n            if (\$query instanceof \\MongoId) {\n                \$query = ['_id' => \$query];\n            } else if (is_scalar(\$query)) {\n                if (is_numeric(\$query)) {\n                    \$query = ['_id' => [\n                        '\$in' => [\$query . '', 0+\$query],\n                    ]];\n                } else if (preg_match('/^[0-9a-f]{24}\$/i', \$query)) {\n                    \$query = ['_id' => [\n                        '\$in' => [\$query, new \\MongoId(\$query)],\n                    ]];\n                } else {\n                    \$query = ['_id' => \$query];\n                }\n            }\n        }\n\n        switch (\$table) {\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 163;
            foreach($collections as $collection) {

                $this->context['collection'] = $collection;
                $line_54a244ae094fd[$_54a244ae094fd] = 164;
                echo "            case ";
                var_export($collection->getClass());
                echo ":\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 165;
                if ($collection->is('SingleCollection') && $collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 166;
                    echo "                    \$query[";
                    var_export($collection->getDiscriminator());
                    echo "] = ";
                    var_export($collection->getClass());
                    echo ";\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 167;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 168;
                foreach($collection->getMethodsByAnnotation('onQuery') as $method) {

                    $this->context['method'] = $method;
                    $line_54a244ae094fd[$_54a244ae094fd] = 169;
                    echo "                    " . ($method->toCode($collection, '$query')) . "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 170;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 171;
                foreach($collection->getPlugins('onQuery') as $plugin) {

                    $this->context['plugin'] = $plugin;
                    $line_54a244ae094fd[$_54a244ae094fd] = 172;
                    echo "                    " . ($plugin->toCode($collection, '$query')) . "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 173;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 174;
                echo "            break;\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 175;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 176;
            echo "        }\n    }\n\n    public function mapClass(\$class)\n    {\n        if (is_object(\$class)) {\n            \$class = \$this->get_class(\$class);\n        }\n\n        \$class = strtolower(\$class);\n        if (empty(\$this->class_mapper[\$class])) {\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 187;
            foreach($collections as $collection) {

                $this->context['collection'] = $collection;
                $line_54a244ae094fd[$_54a244ae094fd] = 188;
                if ($collection->is('SingleCollection')) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 189;
                    echo "                if (\$class == ";
                    var_export($collection->getClass());
                    echo " ||  \$class == ";
                    var_export($collection->getName());
                    echo "){\n                    return ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 190;
                    var_export(['name' => $collection->getName(), 'dynamic' => true, 'prop' => $collection->getDiscriminator(), 'class' => NULL]);
                    echo ";\n                }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 192;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 193;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 194;
            echo "            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        \$data = \$this->class_mapper[\$class];\n\n        if (empty(self::\$loaded[\$data['file']])) {\n            if (!class_exists(\$data['class'], false)) {\n                require __DIR__ . \$data['file'];\n            }\n            self::\$loaded[\$data['file']] = true;\n        }\n\n        return \$data;\n    }\n\n    protected function is_array(\$array)\n    {\n        if (is_array(\$array)) {\n            \$keys = array_keys(\$array);\n            \$expected = range(0, count(\$array)-1);\n            return count(array_diff(\$keys, \$expected)) == 0;\n        }\n        return false;\n    }\n\n    protected function array_unique(\$array, \$toRemove)\n    {\n        \$return = array();\n        \$count  = array();\n        foreach (\$array as \$key => \$value) {\n            \$val = serialize(\$value);\n            if (empty(\$count[\$val])) {\n                \$count[\$val] = 0;\n            }\n            \$count[\$val]++; \n        }\n        foreach (\$toRemove as \$value) {\n            \$val = serialize(\$value);\n            if (!empty(\$count[\$val]) && \$count[\$val] != 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public function mapObject(\$object)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->class_mapper[\$class];\n    }\n\n    public function getReflection(\$name)\n    {\n        \$class = strtolower(\$name);\n        if (empty(\$this->class_mapper[\$class])) {\n            if (empty(\$this->mapper[\$name])) {\n                throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n            }\n            \$class = \$this->mapper[\$name]['class'];\n        }\n\n        return new \\ActiveMongo2\\Reflection\\Collection(\$this->{\"reflect_\" . sha1(\$class)}(), \$this);\n    }\n\n    public function getReference(\$object, Array \$extra = array())\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"get_reference_\" . sha1(\$class)}(\$object, \$extra);\n    }\n\n    public function populateFromArray(\$object, Array \$data)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"populate_from_array_\" . sha1(\$class)}(\$object, \$data);\n    }\n\n\n    public function getDocument(\$object)\n    {\n        if (\$object instanceof \\ActiveMongo2\\Reference) {\n            \$object = \$object->getObject();\n        }\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"get_array_\" . sha1(\$class)}(\$object);\n    }\n\n    public function validate(\$object)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"validate_\" . sha1(\$class)}(\$object);\n    }\n\n    public function set_property(\$object, \$name, \$value)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"set_property_\" . sha1(\$class)}(\$object, \$name, \$value);\n    }\n\n    public function get_property(\$object, \$name)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"get_property_\" . sha1(\$class)}(\$object, \$name);\n    }\n\n    public function update(\$object, Array &\$doc, Array \$old)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"update_\" . sha1(\$class)}(\$doc, \$old);\n    }\n\n    public function getRawDocument(\$object)\n    {\n        if (!empty(\$object->";
            $line_54a244ae094fd[$_54a244ae094fd] = 338;
            echo $instance . ") && \$object->" . ($instance) . " instanceof ActiveMongo2Mapped) {\n            return \$object->";
            $line_54a244ae094fd[$_54a244ae094fd] = 339;
            echo $instance . "->getOriginal();\n        }\n\n        return array();\n    }\n\n    public function populate(&\$object, \$data)\n    {\n        \$class = strtolower(\$this->get_class(\$object));\n\n        if (empty(\$this->class_mapper[\$class])) {\n            throw new \\RuntimeException(\"Cannot map class {\$class} to its document\");\n        }\n\n        return \$this->{\"populate_\" . sha1(\$class)}(\$object, \$data);\n    }\n\n    public function trigger(\$w, \$event, \$object, Array \$args = array())\n    {\n        if (!\$w) return;\n        if (\$object instanceof \\ActiveMongo2\\Reference) {\n            \$class = strtolower(\$object->getClass());\n        } else {\n            \$class = strtolower(\$this->get_class(\$object));\n        }\n        \$method = \"event_{\$event}_\" . sha1(\$class);\n        if (!is_callable(array(\$this, \$method))) {\n            throw new \\RuntimeException(\"Cannot trigger {\$event} event on '\$class' objects\");\n        }\n\n        return \$this->\$method(\$object, \$args);\n    }\n\n    public function getMapping(\$class)\n    {\n        if (is_object(\$class)) {\n            \$class = \$this->get_class(\$class);\n        }\n        \$func  = \"get_mapping_\" . sha1(\$class);\n        if (!is_callable(array(\$this, \$func))) {\n            throw new \\Exception(\"Cannot map \$class\");\n        }\n        return \$this->\$func();\n    }\n\n    public function getObjectClass(\$col, \$doc)\n    {\n        if (\$doc instanceof \\MongoGridFsFile) {\n            \$doc = \$doc->file;\n        }\n        if (\$col instanceof \\MongoCollection) {\n            \$col = \$col->getName();\n        }\n\n        \$class = NULL;\n        switch (\$col) {\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 395;
            foreach($collections as $collection) {

                $this->context['collection'] = $collection;
                $line_54a244ae094fd[$_54a244ae094fd] = 396;
                if ($collection->is('GridFs')) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 397;
                    echo "            case \$this->ns_by_name[";
                    var_export($collection->getname());
                    echo "] . ";
                    var_export($collection->getName() . '.files');
                    echo ":\n            case \$this->ns_by_name[";
                    $line_54a244ae094fd[$_54a244ae094fd] = 398;
                    var_export($collection->getname());
                    echo "] . ";
                    var_export($collection->getName() . '.chunks');
                    echo ":\n            case ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 399;
                    var_export($collection->getName() . '.files');
                    echo ":\n            case ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 400;
                    var_export($collection->getName() . '.chunks');
                    echo ":\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 401;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 402;
                    if ($collection->getName()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 403;
                        echo "                case \$this->ns_by_name[";
                        var_export($collection->getname());
                        echo "] . ";
                        var_export($collection->getName());
                        echo ":\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 404;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 405;
                    echo "            case ";
                    var_export($collection->getName());
                    echo ":\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 406;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 407;
                if (!$collection->is('SingleCollection')) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 408;
                    echo "                    \$class = ";
                    var_export($collection->getClass());
                    echo ";\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 409;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 410;
                    echo "                    if (!empty(" . ($collection->getDiscriminator(true)->getPHPVariable()) . ")) {\n                        \$class = ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 411;
                    echo $collection->getDiscriminator(true)->getPHPVariable() . ";\n                    }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 413;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 414;
                echo "                break;\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 415;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 416;
            echo "        }\n\n        if (empty(\$class)) {\n            throw new \\RuntimeException(\"Cannot get class for collection {\$col}\");\n        }\n\n        return \$class;\n    }\n\n    public function get_class(\$object)\n    { \n        if (\$object instanceof \\ActiveMongo2\\Reference) {\n            \$class = \$object->getClass();\n        } else {\n            \$class = strtolower(get_class(\$object));\n        }\n\n        return \$class;\n    }\n\n    public function updateProperty(\$document, \$key, \$value)\n    {\n        \$class  = strtolower(\$this->get_class(\$document));\n        \$method = \"update_property_\" . sha1(\$class);\n        if (!is_callable(array(\$this, \$method))) {\n            throw new \\RuntimeException(\"Cannot trigger {\$event} event on '\$class' objects\");\n        }\n\n        return \$this->\$method(\$document, \$key, \$value);\n    }\n\n    public function ensureIndex(\$background)\n    {\n\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 450;
            $is_new = version_compare(MongoClient::VERSION, '1.5.0', '>');
            $this->context['is_new'] = $is_new;
            $line_54a244ae094fd[$_54a244ae094fd] = 451;
            echo "\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 452;
            foreach($collections->getIndexes() as $id => $index) {

                $this->context['id'] = $id;
                $this->context['index'] = $index;
                $line_54a244ae094fd[$_54a244ae094fd] = 453;
                $next = uniqid(true);
                $this->context['next'] = $next;
                $line_54a244ae094fd[$_54a244ae094fd] = 454;
                if (!empty($index['col'])) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 455;
                    $col = $index['col'];
                    $this->context['col'] = $col;
                    $line_54a244ae094fd[$_54a244ae094fd] = 456;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 457;
                    $col = $index['prop']->getParent();
                    $this->context['col'] = $col;
                    $line_54a244ae094fd[$_54a244ae094fd] = 458;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 459;
                echo "\n            \$conn = \$this->class_connections[";
                $line_54a244ae094fd[$_54a244ae094fd] = 460;
                var_export($col->getClass());
                echo "];\n            if (empty(\$this->connections[\$conn])) {\n                goto skip_";
                $line_54a244ae094fd[$_54a244ae094fd] = 462;
                echo $next . ";\n            }\n            \$db = \$this->connections[\$conn];\n\n        try {\n            \$col = \$db->createCollection(\$this->ns_by_name[";
                $line_54a244ae094fd[$_54a244ae094fd] = 467;
                var_export($col->getName());
                echo "] . ";
                var_export($col->getName());
                echo "); \n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 469;
                if ($is_new) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 470;
                    echo "            \$return = \$col->createIndex(\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 471;
                    echo crodas\FileUtil\dump_array($index['field']);
                    echo ",\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 472;
                    echo crodas\FileUtil\dump_array($index['extra']);
                    echo "\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 474;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 475;
                    echo "            \$return = \$col->ensureIndex(\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 476;
                    echo crodas\FileUtil\dump_array($index['field']);
                    echo ",\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 477;
                    echo crodas\FileUtil\dump_array($index['extra']);
                    echo "\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 479;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 480;
                echo "        } catch (\\MongoException \$e) {\n            // delete index and try to rebuild it\n            \$col->deleteIndex(";
                $line_54a244ae094fd[$_54a244ae094fd] = 482;
                echo crodas\FileUtil\dump_array($index['field']);
                echo ");\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 484;
                if ($is_new) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 485;
                    echo "            \$col->createIndex(\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 486;
                    echo crodas\FileUtil\dump_array($index['field']);
                    echo ",\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 487;
                    echo crodas\FileUtil\dump_array($index['extra']);
                    echo "\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 489;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 490;
                    echo "            \$col->ensureIndex(\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 491;
                    echo crodas\FileUtil\dump_array($index['field']);
                    echo ",\n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 492;
                    echo crodas\FileUtil\dump_array($index['extra']);
                    echo "\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 494;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 495;
                echo "        }\n        skip_";
                $line_54a244ae094fd[$_54a244ae094fd] = 496;
                echo $next . ":\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 497;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 498;
            echo "    }\n\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 500;
            foreach($collections as $collection) {

                $this->context['collection'] = $collection;
                $line_54a244ae094fd[$_54a244ae094fd] = 501;
                echo "\n    protected function set_property_";
                $line_54a244ae094fd[$_54a244ae094fd] = 502;
                echo sha1($collection->getClass()) . "(\$object, \$name, \$value)\n    {\n        switch (\$name) {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 505;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 506;
                    echo "        case ";
                    var_export($prop->getPHPName());
                    echo ":\n        case ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 507;
                    var_export($prop->getName());
                    echo ":\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 508;
                    if ($prop->isPublic()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 509;
                        echo "                \$object->" . ($prop->getPHPName()) . " = \$value;\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 510;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 511;
                        echo "                \$property = new \\ReflectionProperty(\$object, ";
                        var_export($prop->getPHPName());
                        echo ");\n                \$property->setAccessible(true);\n                \$property->setValue(\$object, \$value);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 514;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 515;
                    echo "            break;\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 516;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 517;
                echo "        default:\n            throw new \\RuntimeException(\"Missing property {\$name}\");\n        }\n\n        return true;\n    }\n\n    /**\n     *  Populate from \$_POST for collection ";
                $line_54a244ae094fd[$_54a244ae094fd] = 525;
                echo $collection->GetClass() . "\n     */\n    protected function populate_from_array_";
                $line_54a244ae094fd[$_54a244ae094fd] = 527;
                echo sha1($collection->getClass()) . "(\$object, Array \$data)\n    {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 529;
                if ($collection->GetName()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 530;
                    echo "        if (array_key_exists(";
                    var_export($collection->GetName());
                    echo ", \$data)) {\n            \$data = \$data[";
                    $line_54a244ae094fd[$_54a244ae094fd] = 531;
                    var_export($collection->getName());
                    echo "];\n        }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 533;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 534;
                echo "        \n";
                $line_54a244ae094fd[$_54a244ae094fd] = 535;
                if ($collection->GetParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 536;
                    echo "        // populate parent data first\n        \$this->populate_from_array_";
                    $line_54a244ae094fd[$_54a244ae094fd] = 537;
                    echo sha1($collection->GetParent()->getClass()) . "(\$object, \$data);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 538;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 539;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 540;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 541;
                    if ($prop->isId() || $prop->getAnnotation()->has('ReferenceMany,EmbedMany')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 542;
                        echo "                // we cannot handle " . ($prop->GetName()) . " at the moment\n";
                        continue;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 545;
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 546;
                    foreach(array_unique([$prop->getName(), $prop->getPHPName()]) as $var) {

                        $this->context['var'] = $var;
                        $line_54a244ae094fd[$_54a244ae094fd] = 547;
                        echo "\n            if (array_key_exists(";
                        $line_54a244ae094fd[$_54a244ae094fd] = 548;
                        var_export($var);
                        echo ", \$data)) {\n                \$value = \$data[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 549;
                        var_export($var);
                        echo "];\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 550;
                        if ($xcol = $prop->getReferenceCollection()) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 551;
                            $xclass = $collections->ByName()[$xcol]['class'];
                            $this->context['xclass'] = $xclass;
                            $line_54a244ae094fd[$_54a244ae094fd] = 552;
                            if ($xclass) {
                                $line_54a244ae094fd[$_54a244ae094fd] = 553;
                                echo "                        if (!is_array(\$value)) {\n                            throw new \\RuntimeException(\"";
                                $line_54a244ae094fd[$_54a244ae094fd] = 554;
                                var_export($prop->getName());
                                echo " must be an array\");\n                        }\n                        if (";
                                $line_54a244ae094fd[$_54a244ae094fd] = 556;
                                var_export($prop->getType() == 'Reference');
                                echo " && !empty(\$value['_id'])) {\n                            \$value = \$this->connection->getCollection(";
                                $line_54a244ae094fd[$_54a244ae094fd] = 557;
                                var_export($xcol);
                                echo ")\n                                ->findOne(\$value['_id']);\n                        } else {\n";
                                $line_54a244ae094fd[$_54a244ae094fd] = 560;
                                if ($prop->isPublic()) {
                                    $line_54a244ae094fd[$_54a244ae094fd] = 561;
                                    echo "                                \$oldValue = \$object->" . ($prop->getPHPName()) . ";\n";
                                    $line_54a244ae094fd[$_54a244ae094fd] = 562;
                                }
                                else {
                                    $line_54a244ae094fd[$_54a244ae094fd] = 563;
                                    echo "                                \$property = new \\ReflectionProperty(\$object, ";
                                    var_export($var);
                                    echo ");\n                                \$property->setAccessible(true);\n                                \$oldValue = \$property->getValue(\$object);\n";
                                    $line_54a244ae094fd[$_54a244ae094fd] = 566;
                                }
                                $line_54a244ae094fd[$_54a244ae094fd] = 567;
                                echo "                            \$docValue =  \$oldValue ?: new \\" . ($xclass) . ";\n                            \$this->populate_from_array_";
                                $line_54a244ae094fd[$_54a244ae094fd] = 568;
                                echo sha1($xclass) . "(\$docValue, \$value);\n                            \$value = \$docValue;\n                        }\n";
                                $line_54a244ae094fd[$_54a244ae094fd] = 571;
                            }
                            $line_54a244ae094fd[$_54a244ae094fd] = 572;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 573;
                        echo "\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 574;
                        if ($prop->isPublic()) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 575;
                            echo "                    \$object->" . ($prop->getPHPName()) . " = \$value; \n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 576;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 577;
                            echo "                    \$property = new \\ReflectionProperty(\$object, ";
                            var_export($prop->getPHPName());
                            echo ");\n                    \$property->setAccessible(true);\n                    \$property->setValue(\$object, \$value);\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 580;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 581;
                        echo "    \n            }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 583;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 584;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 585;
                echo "    }\n\n\n    protected function get_property_";
                $line_54a244ae094fd[$_54a244ae094fd] = 588;
                echo sha1($collection->getClass()) . "(\$object, \$name)\n    {\n        switch (\$name) {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 591;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 592;
                    echo "        case ";
                    var_export($prop->getPHPName());
                    echo ":\n        case ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 593;
                    var_export($prop->getName());
                    echo ":\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 594;
                    if ($prop->isPublic()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 595;
                        echo "                \$return = \$object->" . ($prop->getPHPName()) . ";\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 596;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 597;
                        echo "                \$property = new \\ReflectionProperty(\$object, ";
                        var_export($prop->getPHPName());
                        echo ");\n                \$property->setAccessible(true);\n                \$return = \$property->getValue(\$object);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 600;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 601;
                    echo "            break;\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 602;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 603;
                echo "        case '_id': \n            //fallback to get the object ID when it is not part of the object (rare case)\n            if (!empty(\$object->";
                $line_54a244ae094fd[$_54a244ae094fd] = 605;
                echo $instance . ") && \$object->" . ($instance) . " instanceof ActiveMongo2Mapped) {\n                return \$object->";
                $line_54a244ae094fd[$_54a244ae094fd] = 606;
                echo $instance . "->getOriginal()['_id'];\n            }\n        default:\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 609;
                if ($collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 610;
                    echo "                return \$this->get_property_" . (sha1($collection->getParent())) . "(\$object, \$name);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 611;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 612;
                    echo "                throw new \\RuntimeException(\"Missing property {\$name}\");\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 613;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 614;
                echo "        }\n\n        return \$return;\n    }\n\n    /**\n     *  Get update object ";
                $line_54a244ae094fd[$_54a244ae094fd] = 620;
                echo $collection->getClass() . " \n     */\n    protected function update_";
                $line_54a244ae094fd[$_54a244ae094fd] = 622;
                echo sha1($collection->getClass()) . "(Array &\$current, Array \$old, \$embed = false)\n    {\n        if (!\$embed && !empty(\$current['_id']) && \$current['_id'] != \$old['_id']) {\n            throw new \\RuntimeException(\"document ids cannot be updated\");\n        }\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 628;
                if (!$collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 629;
                    echo "            \$change = array();\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 630;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 631;
                    echo "            \$change = \$this->update_" . (sha1($collection->getParent())) . "(\$current, \$old, \$embed);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 632;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 633;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 634;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 635;
                    echo "            \$has_changed = false;\n            if (array_key_exists(";
                    $line_54a244ae094fd[$_54a244ae094fd] = 636;
                    var_export($prop.'');
                    echo ", " . ($prop->getPHPBaseVariable('$current')) . ")\n                || array_key_exists(";
                    $line_54a244ae094fd[$_54a244ae094fd] = 637;
                    var_export($prop.'');
                    echo ", \$old)) {\n                if (!array_key_exists(";
                    $line_54a244ae094fd[$_54a244ae094fd] = 638;
                    var_export($prop.'');
                    echo ", " . ($prop->getPHPBaseVariable('$current')) . ")) {\n                    \$change['\$unset'][";
                    $line_54a244ae094fd[$_54a244ae094fd] = 639;
                    var_export($prop.'');
                    echo "] = 1;\n                } else if (!array_key_exists(";
                    $line_54a244ae094fd[$_54a244ae094fd] = 640;
                    var_export($prop.'');
                    echo ", \$old)) {\n                    \$change['\$set'][";
                    $line_54a244ae094fd[$_54a244ae094fd] = 641;
                    var_export($prop.'');
                    echo "] = " . ($prop->getPHPVariable('$current')) . ";\n                    \$has_changed = true;\n                } else if (";
                    $line_54a244ae094fd[$_54a244ae094fd] = 643;
                    echo $prop->getPHPVariable('$current') . " !== \$old[";
                    var_export($prop.'');
                    echo "]) {\n                    \$has_changed = true;\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 645;
                    if ($prop->getAnnotation()->has('Inc')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 646;
                        echo "                        if (empty(\$old[";
                        var_export($prop.'');
                        echo "])) {\n                            \$prev = 0;\n                        } else {\n                            \$prev = \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 649;
                        var_export($prop.'');
                        echo "];\n                        }\n                        \$change['\$inc'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 651;
                        var_export($prop.'');
                        echo "] = " . ($prop->GetPHPVariable('$current')) . " - \$prev;\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 652;
                    }
                    else if ($prop->getAnnotation()->has('Embed')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 653;
                        echo "                        if (" . ($prop->getPHPVariable('$current')) . "['__embed_class'] != \$old[";
                        var_export($prop.'');
                        echo "]['__embed_class']) {\n                            \$change['\$set'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 654;
                        var_export($prop.'.');
                        echo " . \$index] = " . ($prop->GetPHPVariable('$current')) . ";\n                        } else {\n                            \$update = 'update_' . sha1(";
                        $line_54a244ae094fd[$_54a244ae094fd] = 656;
                        echo $prop->getPHPVariable('$current') . "['__embed_class']);\n                            \$diff = \$this->\$update(";
                        $line_54a244ae094fd[$_54a244ae094fd] = 657;
                        echo $prop->getPHPVariable('$current') . ", \$old[";
                        var_export($prop.'');
                        echo "], true);\n                            foreach (\$diff as \$op => \$value) {\n                                foreach (\$value as \$p => \$val) {\n                                    \$change[\$op][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 660;
                        var_export($prop.'.');
                        echo " . \$p] = \$val;\n                                }\n                            }\n                        }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 664;
                    }
                    else if ($prop->getAnnotation()->has('EmbedMany')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 665;
                        echo "                        // add things to the array\n                        \$toRemove = array_diff_key(\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 666;
                        var_export($prop.'');
                        echo "], " . ($prop->getPHPVariable('$current')) . ");\n\n                        if (count(\$toRemove) > 0 && \$this->array_unique(\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 668;
                        var_export($prop.'');
                        echo "], \$toRemove)) {\n                            \$change['\$set'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 669;
                        var_export($prop.'');
                        echo "] = array_values(" . ($prop->getPHPVariable('$current')) . ");\n                        } else {\n                            foreach (";
                        $line_54a244ae094fd[$_54a244ae094fd] = 671;
                        echo $prop->getPHPVariable('$current') . " as \$index => \$value) {\n                                if (!array_key_exists(\$index, \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 672;
                        var_export($prop.'');
                        echo "])) {\n                                    \$change['\$push'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 673;
                        var_export($prop.'');
                        echo "]['\$each'][] = \$value;\n                                    continue;\n                                }\n                                if (\$value['__embed_class'] != \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 676;
                        var_export($prop.'');
                        echo "][\$index]['__embed_class']) {\n                                    \$change['\$set'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 677;
                        var_export($prop.'.');
                        echo " . \$index] = \$value;\n                                } else {\n                                    \$update = 'update_' . sha1(\$value['__embed_class']);\n                                    \$diff = \$this->\$update(\$value, \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 680;
                        var_export($prop.'');
                        echo "][\$index], true);\n                                    foreach (\$diff as \$op => \$value) {\n                                        foreach (\$value as \$p => \$val) {\n                                            \$change[\$op][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 683;
                        var_export($prop.'.');
                        echo " . \$index . '.' . \$p] = \$val;\n                                        }\n                                    }\n                                }\n                            }\n\n                            foreach (\$toRemove as \$value) {\n                                if (!empty(\$value['__instance'])) {\n                                    \$change['\$pull'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 691;
                        var_export($prop.'');
                        echo "]['__instance']['\$in'][] = \$value['__instance'];\n                                } else {\n                                    \$change['\$pull'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 693;
                        var_export($prop.'');
                        echo "][] = \$value;\n                                }\n                            }\n                        }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 697;
                    }
                    else if ($prop->getAnnotation()->has('ReferenceMany,Array')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 698;
                        echo "                        // add things to the array\n                        \$toRemove = array_diff_key(\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 699;
                        var_export($prop.'');
                        echo "], " . ($prop->getPHPVariable('$current')) . ");\n\n                        if ((count(\$toRemove) > 0 && \$this->array_unique(\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 701;
                        var_export($prop.'');
                        echo "], \$toRemove)) || !\$this->is_array(\$old[";
                        var_export($prop.'');
                        echo "])) {\n                            \$change['\$set'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 702;
                        var_export($prop.'');
                        echo "] = array_values(" . ($prop->getPHPVariable('$current')) . ");\n                        } else {\n                            foreach (";
                        $line_54a244ae094fd[$_54a244ae094fd] = 704;
                        echo $prop->getPHPVariable('$current') . " as \$index => \$value) {\n                                if (!array_key_exists(\$index, \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 705;
                        var_export($prop.'');
                        echo "])) {\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 706;
                        if ($prop->getAnnotation()->has('ReferenceMany')) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 707;
                            echo "                                        \$change['\$addToSet'][";
                            var_export($prop.'');
                            echo "]['\$each'][] = \$value;\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 708;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 709;
                            echo "                                        \$change['\$push'][";
                            var_export($prop.'');
                            echo "]['\$each'][] = \$value;\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 710;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 711;
                        echo "                                    continue;\n                                }\n\n                                if (!empty(\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 714;
                        var_export($prop.'');
                        echo "][\$index]['__instance']) && is_array(\$value)) {\n                                    // __instance is an internal variable that helps\n                                    // activemongo2 to remove sub objects from arrays easily.\n                                    // Its value is private to the library and it shouldn't change\n                                    // unless the value of the object changes\n                                    \$diff = \$this->array_diff(\n                                        \$value,\n                                        \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 721;
                        var_export($prop.'');
                        echo "][\$index]\n                                    );\n                                    if (count(\$diff) == 1 && !empty(\$diff['__instance'])) {\n                                        \$value['__instance'] = \$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 724;
                        var_export($prop.'');
                        echo "][\$index]['__instance'];\n                                        ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 725;
                        echo $prop->getPHPVariable('$current') . "[\$index] = \$value;\n                                    }\n                                }\n\n                                if (\$old[";
                        $line_54a244ae094fd[$_54a244ae094fd] = 729;
                        var_export($prop.'');
                        echo "][\$index] != \$value) {\n                                    \$change['\$set'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 730;
                        var_export($prop . '.');
                        echo " . \$index] = \$value;\n                                }\n                            }\n\n                            foreach (\$toRemove as \$value) {\n                                if (!empty(\$value['__instance'])) {\n                                    \$change['\$pull'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 736;
                        var_export($prop.'');
                        echo "]['__instance']['\$in'][] = \$value['__instance'];\n                                } else {\n                                    \$change['\$pull'][";
                        $line_54a244ae094fd[$_54a244ae094fd] = 738;
                        var_export($prop.'');
                        echo "] = \$value;\n                                }\n                            }\n                        }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 742;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 743;
                        echo "                        \$change['\$set'][";
                        var_export($prop.'');
                        echo "] = " . ($prop->getPHPVariable('$current')) . ";\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 744;
                    }



                    $line_54a244ae094fd[$_54a244ae094fd] = 745;
                    echo "                }\n            }\n\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 748;
                    $ann = $prop->getAnnotation();
                    $this->context['ann'] = $ann;
                    $line_54a244ae094fd[$_54a244ae094fd] = 749;
                    if ($ann->has('Array,ReferenceMany,EmbedMany')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 750;
                        if ($ann->has('Limit')) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 751;
                            echo "                if (\$has_changed && !empty(\$change['\$push'][";
                            var_export($prop.'');
                            echo "])) {\n                    \$change['\$push'][";
                            $line_54a244ae094fd[$_54a244ae094fd] = 752;
                            var_export($prop.'');
                            echo "]['\$slice'] = ";
                            var_export(0+current($prop->getAnnotation()->getOne('Limit')));
                            echo ";\n                }\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 754;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 755;
                        if ($ann->has('Sort')) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 756;
                            echo "                if (\$has_changed && !empty(\$change['\$push'][";
                            var_export($prop.'');
                            echo "])) {\n                    \$change['\$sort'][";
                            $line_54a244ae094fd[$_54a244ae094fd] = 757;
                            var_export($prop.'');
                            echo "]['\$sort'] = ";
                            var_export(0+current($prop->getAnnotation()->getOne('Limit')));
                            echo ";\n                }\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 759;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 760;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 761;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 762;
                echo "\n        return \$change;\n    }\n\n    protected function get_mapping_";
                $line_54a244ae094fd[$_54a244ae094fd] = 766;
                echo sha1($collection->getClass()) . "() \n    {\n        return array(\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 769;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 770;
                    echo "                ";
                    var_export($prop->getName(true));
                    echo " => ";
                    var_export($prop->getProperty());
                    echo ",\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 771;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 772;
                echo "        );\n    }\n\n    /**\n     *  Populate objects ";
                $line_54a244ae094fd[$_54a244ae094fd] = 776;
                echo $collection->getClass() . " \n     */\n    protected function populate_";
                $line_54a244ae094fd[$_54a244ae094fd] = 778;
                echo sha1($collection->getClass()) . "(\\" . ($collection->getClass()) . " &\$object, \$data)\n    {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 780;
                if ($p = $collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 781;
                    echo "            \$this->populate_" . (sha1($p->getClass())) . "(\$object, \$data);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 782;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 783;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 784;
                if ($collection->is('GridFs')) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 785;
                    echo "            if (!\$data instanceof \\MongoGridFsFile) {\n                throw new \\RuntimeException(\"Internal error, trying to populate a GridFSFile with an array\");\n            }\n            \$data_file = \$data;\n            \$data      = \$data->file;\n            if (empty(\$data['metadata'])) {\n                \$data['metadata'] = [];\n            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 793;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 794;
                    echo "\n            if (!is_array(\$data)) {\n                throw new \\RuntimeException(\"Internal error, trying to populate a document with a wrong data\");\n            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 798;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 799;
                echo "\n        \$doc = \$data;\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 802;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 803;
                    if ($prop->getAnnotation()->has('ReferenceMany')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 804;
                        echo "                if (!empty(" . ($prop->getPHPVariable()) . ")) {\n                    foreach(";
                        $line_54a244ae094fd[$_54a244ae094fd] = 805;
                        echo $prop->getPHPVariable() . " as \$id => \$sub) {\n                        if (empty(\$sub['__instance']) || !strpos(\$sub['__instance'], \$sub['\$ref'])) {\n                            \$sub['__instance'] = \$sub['\$ref'] . ':' . serialize(\$sub['\$id']) ;\n                        }\n                        ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 809;
                        echo $prop->getPHPVariable() . "[\$id] = \$sub;\n                    }\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 812;
                    }
                    else if ($prop->getAnnotation()->has('Stream')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 813;
                        if ($prop->isPublic()) {
                            $line_54a244ae094fd[$_54a244ae094fd] = 814;
                            echo "                    \$object->" . ($prop->getPHPName()) . " = \$data_file->getResource();\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 815;
                        }
                        else {
                            $line_54a244ae094fd[$_54a244ae094fd] = 816;
                            echo "                    \$property = new \\ReflectionProperty(\$object, ";
                            var_export($prop->getPHPName());
                            echo ");\n                    \$property->setAccessible(true);\n                    \$property->setValue(\$object, \$data_file->getResource());\n";
                            $line_54a244ae094fd[$_54a244ae094fd] = 819;
                        }
                        continue;
                    }

                    $line_54a244ae094fd[$_54a244ae094fd] = 822;
                    echo "\n            if (array_key_exists(";
                    $line_54a244ae094fd[$_54a244ae094fd] = 823;
                    var_export($prop.'');
                    echo ", " . ($prop->getPHPBaseVariable()) . ")) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 824;
                    foreach($prop->getCallback('Hydratate') as $h) {

                        $this->context['h'] = $h;
                        $line_54a244ae094fd[$_54a244ae094fd] = 825;
                        echo "                    " . ($h->toCode($prop, $prop->getPHPVariable())) . "\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 826;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 827;
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 828;
                    if ($prop->isPublic()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 829;
                        echo "                    \$object->" . ($prop->getPHPName()) . " = " . ($prop->getPHPVariable()) . ";\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 830;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 831;
                        echo "                    \$property = new \\ReflectionProperty(\$object, ";
                        var_export($prop->getPHPName());
                        echo ");\n                    \$property->setAccessible(true);\n                    \$property->setValue(\$object, ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 833;
                        echo $prop->getPHPVariable() . ");\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 834;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 835;
                    echo "                \n            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 837;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 838;
                echo "\n        if (empty(\$object->";
                $line_54a244ae094fd[$_54a244ae094fd] = 839;
                echo $instance . ")) {\n            \$object->";
                $line_54a244ae094fd[$_54a244ae094fd] = 840;
                echo $instance . " = new ActiveMongo2Mapped(";
                var_export($collection->getClass());
                echo ", \$data);\n        } else {\n            \$object->";
                $line_54a244ae094fd[$_54a244ae094fd] = 842;
                echo $instance . "->" . ($instance) . "_setOriginal(\$data);\n        }\n    }\n\n    /**\n     *  Get reference of  ";
                $line_54a244ae094fd[$_54a244ae094fd] = 847;
                echo $collection->getClass() . " object\n     */\n    protected function get_reference_";
                $line_54a244ae094fd[$_54a244ae094fd] = 849;
                echo sha1($collection->getClass()) . "(\\" . ($collection->getClass()) . " \$object, \$include = Array())\n    {\n        \$document = \$this->get_array_";
                $line_54a244ae094fd[$_54a244ae094fd] = 851;
                echo sha1($collection->getClass()) . "(\$object);\n        \$extra    = array();\n        if (\$include) {\n            \$extra  = array_intersect_key(\$document, \$include);\n        }\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 857;
                if ($cache = $collection->getRefCache()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 858;
                    echo "            \$extra = array_merge(\$extra,  array_intersect_key(\n                \$document, \n                ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 860;
                    var_export($cache);
                    echo "\n            ));\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 862;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 863;
                echo "        \n        foreach (\$extra as \$key => \$value) {\n            if (is_object(\$value)) {\n                if (\$value instanceof \\ActiveMongo2\\Reference) {\n                    \$extra[\$key] = \$value->getReference();\n                } else {\n                    \$extra[\$key] = \$this->getReference(\$value);\n                }\n            }\n        }\n\n        return array_merge(array(\n                '\$ref'  => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 875;
                var_export($collection->getName());
                echo ", \n                '\$id'   => \$document['_id'],\n                '__class' => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 877;
                var_export($collection->getClass());
                echo ",\n                '__instance' => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 878;
                var_export($collection->getName());
                echo " . ':' . serialize(\$document['_id']),\n            )\n            , \$extra\n        );\n\n    }\n\n    /**\n     *  Validate ";
                $line_54a244ae094fd[$_54a244ae094fd] = 886;
                echo $collection->getClass() . " object\n     */\n    protected function get_array_";
                $line_54a244ae094fd[$_54a244ae094fd] = 888;
                echo sha1($collection) . "(\\" . ($collection) . " \$object, \$recursive = true)\n    {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 890;
                if (!$collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 891;
                    echo "            \$doc = array();\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 892;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 893;
                    echo "            \$doc = \$recursive ? \$this->get_array_" . (sha1($collection->getParent())) . "(\$object) : array();\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 894;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 895;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 896;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 897;
                    if ($prop->isPublic() && !$prop->isCustom()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 898;
                        echo "                /* Public property " . ($prop->getPHPName()) . " -> " . ($prop->getName()) . " */\n                if (\$object->";
                        $line_54a244ae094fd[$_54a244ae094fd] = 899;
                        echo $prop->getPHPName() . " !== NULL) {\n                    ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 900;
                        echo $prop->getPHPVariable() . " = \$object->" . ($prop->getPHPName()) . ";\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 902;
                    }
                    else if ($prop->isCustom()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 903;
                        echo "                /* public and custom property " . ($prop->getPHPName()) . " -> " . ($prop->getName()) . " */\n                if (!empty(\$object->";
                        $line_54a244ae094fd[$_54a244ae094fd] = 904;
                        echo $prop->getPHPName() . ")) {\n                    ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 905;
                        echo $prop->getPHPVariable() . " = \$object->" . ($prop->getPHPName()) . ";\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 907;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 908;
                        echo "                \$property = new \\ReflectionProperty(\$object, ";
                        var_export($prop->getPHPName());
                        echo ");\n                \$property->setAccessible(true);\n                ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 910;
                        echo $prop->getPHPVariable() . " = \$property->getValue(\$object);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 911;
                    }

                    $line_54a244ae094fd[$_54a244ae094fd] = 912;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 913;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 914;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 915;
                    foreach($prop->getCallback('DefaultValue') as $default) {

                        $this->context['default'] = $default;
                        $line_54a244ae094fd[$_54a244ae094fd] = 916;
                        echo "                if (empty(" . ($prop->getPHPVariable()) . ")) {\n                    ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 917;
                        echo $default->toCode($prop) . "\n                    ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 918;
                        echo $prop->getPHPVariable() . " = \$return;\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 920;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 921;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 922;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 923;
                if ($collection->is('SingleCollection')) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 924;
                    echo "            // SINGLE COLLECTION\n            ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 925;
                    echo $collection->getDiscriminator(true)->getPHPVariable() . " = ";
                    var_export($collection->getClass());
                    echo ";\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 926;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 927;
                echo "\n        if (empty(\$doc['_id'])) {\n            \$oldDoc = \$this->getRawDocument(\$object, false);\n            if (!empty(\$oldDoc['_id'])) {\n                \$doc['_id'] = \$oldDoc['_id'];\n            }\n        }\n\n        return \$doc;\n    }\n\n    protected function reflect_";
                $line_54a244ae094fd[$_54a244ae094fd] = 938;
                echo sha1($collection->getClass()) . "() \n    {\n        \$reflection = array(\n            'class'    => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 941;
                var_export($collection->getClass());
                echo ",\n            'name'     => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 942;
                var_export($collection->getName());
                echo ",\n            'collection'     => ";
                $line_54a244ae094fd[$_54a244ae094fd] = 943;
                var_export($collection->getName());
                echo ",\n            'annotation' => array(\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 945;
                foreach($collection->getAnnotation() as $ann) {

                    $this->context['ann'] = $ann;
                    $line_54a244ae094fd[$_54a244ae094fd] = 946;
                    echo "            ";
                    var_export($ann);
                    echo ",\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 947;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 948;
                echo "            ),\n            'properties'  => array(\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 950;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 951;
                    echo "            ";
                    var_export($prop->getPHPName());
                    echo " => new \\ActiveMongo2\\Reflection\\Property(array(\n                'property' => ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 952;
                    var_export($prop.'');
                    echo ",\n                'type'     => ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 953;
                    var_export($prop->getType());
                    echo ",\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 954;
                    if ($prop->getReferenceCollection()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 955;
                        echo "                'collection' => ";
                        var_export($prop->getReferenceCollection());
                        echo ",\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 956;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 957;
                    echo "                'annotation' => new Annotation(array(\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 958;
                    foreach($prop->getAnnotation() as $ann) {

                        $this->context['ann'] = $ann;
                        $line_54a244ae094fd[$_54a244ae094fd] = 959;
                        echo "                        ";
                        var_export($ann);
                        echo ",\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 960;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 961;
                    echo "                )),\n            ), \$this),\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 963;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 964;
                echo "        ));\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 966;
                if ($collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 967;
                    echo "            \$reflection['properties'] = array_merge(\n                \$this->reflect_";
                    $line_54a244ae094fd[$_54a244ae094fd] = 968;
                    echo sha1($collection->GetParent()) . "()['properties'], \n                \$reflection['properties']\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 971;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 972;
                echo "        return \$reflection;\n    }\n\n    /**\n     *  Validate ";
                $line_54a244ae094fd[$_54a244ae094fd] = 976;
                echo $collection->getClass() . " object\n     */\n    protected function validate_";
                $line_54a244ae094fd[$_54a244ae094fd] = 978;
                echo sha1($collection->getClass()) . "(\\" . ($collection->getClass()) . " \$object)\n    {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 980;
                if ($collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 981;
                    echo "            \$doc = array_merge(\n                \$this->validate_";
                    $line_54a244ae094fd[$_54a244ae094fd] = 982;
                    echo sha1($collection->getParent()) . "(\$object),\n                \$this->get_array_";
                    $line_54a244ae094fd[$_54a244ae094fd] = 983;
                    echo sha1($collection->getClass()) . "(\$object, false)\n            );\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 985;
                }
                else {
                    $line_54a244ae094fd[$_54a244ae094fd] = 986;
                    echo "            \$doc = \$this->get_array_" . (sha1($collection->getClass())) . "(\$object);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 987;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 988;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 989;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 990;
                    if ($prop->getAnnotation()->has('Required')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 991;
                        echo "            if (empty(" . ($prop->getPHPVariable()) . ")) {\n                throw new \\RuntimeException(\"";
                        $line_54a244ae094fd[$_54a244ae094fd] = 992;
                        echo $prop.'' . " cannot be empty\");\n            }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 994;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 995;
                    echo "            if (!empty(" . ($prop->getPHPVariable()) . ")) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 996;
                    foreach($prop->getCallback('Validate') as $val) {

                        $this->context['val'] = $val;
                        $line_54a244ae094fd[$_54a244ae094fd] = 997;
                        echo "                " . ($val->toCode($prop, $prop->getPHPVariable())) . "\n                if (\$return === FALSE) {\n                    throw new \\RuntimeException(\"Validation failed for ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 999;
                        echo $prop.'' . "\");\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1001;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1002;
                    echo "\n\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1004;
                    if ($prop->getAnnotation()->has('Date')) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1005;
                        echo "                    \$_date = \\date_create('" . "@" . "' . " . ($prop->getPHPVariable()) . "->sec);\n                    if (v\\validate_";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1006;
                        echo sha1($collection->getClass() . "::" . $prop->getPHPName()) . "(\$_date) === false) {\n                        throw new \\RuntimeException(\"Validation failed for ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1007;
                        echo $prop.'' . "\");\n                    }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1009;
                    }
                    else if (!$prop->isCustom() && $validator->hasRules($collection->getClass() . "::" . $prop->getPHPName())) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1010;
                        echo "                    if (v\\validate_" . (sha1($collection->getClass() . "::" . $prop->getPHPName())) . "(" . ($prop->getPHPVariable()) . ") === false) {\n                        throw new \\RuntimeException(\"Validation failed for ";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1011;
                        echo $prop.'' . "\");\n                    }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1013;
                    }

                    $line_54a244ae094fd[$_54a244ae094fd] = 1014;
                    echo "            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1015;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 1016;
                echo "\n        return \$doc;\n    }\n\n    protected function update_property_";
                $line_54a244ae094fd[$_54a244ae094fd] = 1020;
                echo sha1($collection->getClass()) . "(\\" . ($collection->getClass()) . " \$document, \$property, \$value)\n    {\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 1022;
                if ($collection->getParent()) {
                    $line_54a244ae094fd[$_54a244ae094fd] = 1023;
                    echo "            \$this->update_property_" . (sha1($collection->getParent())) . "(\$document, \$property, \$value);\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1024;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 1025;
                foreach($collection->getProperties() as $prop) {

                    $this->context['prop'] = $prop;
                    $line_54a244ae094fd[$_54a244ae094fd] = 1026;
                    echo "            if (\$property ==  ";
                    var_export($prop.'');
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1027;
                    foreach($prop->getAnnotation()->getAll() as $annotation) {

                        $this->context['annotation'] = $annotation;
                        $line_54a244ae094fd[$_54a244ae094fd] = 1028;
                        echo "                 || \$property == ";
                        var_export('@'.$annotation['method']);
                        echo "\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1029;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1030;
                    echo "            ) {\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1031;
                    if ($prop->isPublic()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1032;
                        echo "                    \$document->" . ($prop->getPHPName()) . " = \$value;\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1033;
                    }
                    else {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1034;
                        echo "                    \$property = new \\ReflectionProperty(\$object, ";
                        var_export($prop->getPHPNAme());
                        echo ");\n                    \$property->setAccessible(true);\n                    \$property->setValue(\$document, \$value);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1037;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1038;
                    echo "            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1039;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 1040;
                echo "    }\n\n\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 1043;
                foreach($collections->getEvents() as $ev) {

                    $this->context['ev'] = $ev;
                    $line_54a244ae094fd[$_54a244ae094fd] = 1044;
                    echo "    /**\n     *  Code for ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1045;
                    echo $ev . " events for objects " . ($collection->getClass()) . "\n     */\n        protected function event_";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1047;
                    echo $ev . "_" . (sha1($collection->getClass())) . "(\$document, Array \$args)\n        {\n            \$class = \$this->get_class(\$document);\n            if (\$class != ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1050;
                    var_export($collection->getClass());
                    echo " && !is_subclass_of(\$class, ";
                    var_export($collection->getClass());
                    echo ")) {\n                throw new \\Exception(\"Class invalid class name (\$class) expecting  \"  . ";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1051;
                    var_export($collection->getClass());
                    echo ");\n            }\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1053;
                    if ($collection->getParent()) {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1054;
                        echo "                \$this->event_" . ($ev) . "_" . (sha1($collection->getParent()->getClass())) . "(\$document, \$args);\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1055;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1056;
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1057;
                    foreach($collection->getMethodsByAnnotation($ev) as $method) {

                        $this->context['method'] = $method;
                        $line_54a244ae094fd[$_54a244ae094fd] = 1058;
                        echo "                " . ($method->toCode($collection, '$document')) . "\n                if (\$return === FALSE) {\n                    throw new \\RuntimeException;\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1062;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1063;
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1064;
                    if ($ev =="postCreate" || $ev == "postUpdate") {
                        $line_54a244ae094fd[$_54a244ae094fd] = 1065;
                        echo "                \$col = \$args[1]->getDatabase()->references_queue;\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1066;
                        ActiveMongo2\Template\Templates::exec("reference/deferred.tpl.php", compact('ev', 'collection'), $this->context);
                        $line_54a244ae094fd[$_54a244ae094fd] = 1067;
                        if ($ev == "postUpdate") {
                            $line_54a244ae094fd[$_54a244ae094fd] = 1068;
                            ActiveMongo2\Template\Templates::exec("reference/update.tpl.php", compact('ev', 'collection'), $this->context);
                            $line_54a244ae094fd[$_54a244ae094fd] = 1069;
                        }
                        $line_54a244ae094fd[$_54a244ae094fd] = 1070;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1071;
                    echo "\n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1072;
                    foreach($collection->getPlugins($ev) as $plugin) {

                        $this->context['plugin'] = $plugin;
                        $line_54a244ae094fd[$_54a244ae094fd] = 1073;
                        echo "                " . ($plugin->toCode($collection, '$document')) . "\n                if (\$return === FALSE) {\n                    throw new \\RuntimeException;\n                }\n";
                        $line_54a244ae094fd[$_54a244ae094fd] = 1077;
                    }
                    $line_54a244ae094fd[$_54a244ae094fd] = 1078;
                    echo "        }\n    \n";
                    $line_54a244ae094fd[$_54a244ae094fd] = 1080;
                }
                $line_54a244ae094fd[$_54a244ae094fd] = 1081;
                echo "\n";
                $line_54a244ae094fd[$_54a244ae094fd] = 1082;
            }
            $line_54a244ae094fd[$_54a244ae094fd] = 1083;
            echo "}\n\nclass ActiveMongo2Mapped\n{\n    protected \$class;\n    protected \$data;\n\n    public function __construct(\$name, Array \$data)\n    {\n        \$this->class = \$name;\n        \$this->data  = \$data;\n    }\n\n    public function getClass()\n    {\n        return \$this->class;\n    }\n\n    public function getOriginal()\n    {\n        return \$this->data;\n    }\n\n    public function ";
            $line_54a244ae094fd[$_54a244ae094fd] = 1106;
            echo $instance . "_setOriginal(Array \$data)\n    {\n        \$this->data = \$data;\n    }\n}\n\n";
            $line_54a244ae094fd[$_54a244ae094fd] = 1112;
            echo substr($validator->getCode(), 5) . "\n\nreturn array(\n    \"ns\" => ";
            $line_54a244ae094fd[$_54a244ae094fd] = 1115;
            var_export(trim($namespace, '\\'));
            echo ",\n    \"validator\" => ";
            $line_54a244ae094fd[$_54a244ae094fd] = 1116;
            var_export($valns);
            echo ",\n);\n";

            array_pop($file_54a244ae094fd);

            if ($return) {
                return ob_get_clean();
            }

        }
    }

}

namespace ActiveMongo2\Template {

    use Exception;

    class ExceptionWrapper extends Exception
    {
        public $e;
        protected $file;

        public function getSimpleViewTrace()
        {
            global $file_54a244ae094fd, $line_54a244ae094fd;

            $traces = $this->e->getTrace();
            $i = 0;
            foreach ($traces as &$trace) {
                if (!empty($trace['file'])
                    && $trace['file'] == $this->file && !empty($file_54a244ae094fd[$i])) {
                    $trace['file'] = $file_54a244ae094fd[$i];
                    $trace['line'] = $line_54a244ae094fd[$i];
                    ++$i;
                }
                if (empty($trace['file'])) {
                    $trace['file'] = '[internal function]';
                }
                if (empty($trace['line'])) {
                    $trace['line'] = '';
                }
            }

            return $traces;
        }

        public function __toString()
        {
            $traces = $this->getSimpleViewTrace();
            $str    = "exception '" . get_class($this->e) . "' in {$traces[0]['file']}{$traces[0]['line']}:\nStack trace:\n";
            foreach ($traces as $i => $trace) {
                $str .= "#{$i} {$trace['file']}:{$trace['line']}\n";
            }
            ++$i;
            $str .= "#{$i} {main}";
            return $str;
        }

        public function __construct(Exception $e, $file)
        {
            $this->e    = $e;
            $this->file = $file;
        }
    }


    class Templates
    {
        public static function getAll()
        {
            return array (
                0 => 'callback',
                1 => 'reference/deferred',
                2 => 'reference/update',
                3 => 'documents',
            );
        }

        public static function getAllSections($name, $fail = true)
        {
            switch ($name) {
            default:
                if ($fail) {
                    throw new \RuntimeException("Cannot find section {$name}");
                }

                return array();
            }
        }

        public static function exec($name, Array $context = array(), Array $global = array())
        {
            $tpl = self::get($name);
            return $tpl->render(array_merge($global, $context));
        }

        public static function get($name, Array $context = array())
        {
            static $classes = array (
                'callback.tpl' => 'class_1895ec604b22a2e3f627b9d8d7ae6142d332247e',
                'callback' => 'class_1895ec604b22a2e3f627b9d8d7ae6142d332247e',
                'reference/deferred.tpl.php' => 'class_7e3d172c6b9ee7fd7d68e93c41ee0d852447ceca',
                'reference/deferred' => 'class_7e3d172c6b9ee7fd7d68e93c41ee0d852447ceca',
                'reference/update.tpl.php' => 'class_f8c39509b1fb331e8b8ef22a135640af98725ce5',
                'reference/update' => 'class_f8c39509b1fb331e8b8ef22a135640af98725ce5',
                'documents.tpl.php' => 'class_4c3d011cafbc519bc12f3ed430a4e169ad8b5e8b',
                'documents' => 'class_4c3d011cafbc519bc12f3ed430a4e169ad8b5e8b',
            );
            $name = strtolower($name);
            if (empty($classes[$name])) {
                throw new \RuntimeException("Cannot find template $name");
            }

            $class = "\\" . $classes[$name];
            return new $class;
        }
    }

}
